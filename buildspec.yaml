version: 0.2

phases:
  install: # Install AWS cli, kubectl (needed for Helm) and Helm
    commands:
       - apt install -y git python3
       - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
       - chmod +x ./aws-iam-authenticator
       - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
       - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
       - chmod +x kubectl
       - mv ./kubectl /usr/local/bin/kubectl
       - wget https://storage.googleapis.com/kubernetes-helm/helm-v2.14.0-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz
       - chmod +x ./linux-amd64/helm
       - mv ./linux-amd64/helm /usr/local/bin/helm

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - "mkdir ~/.kube/"
      - "cp config-$ENV ~/.kube/config"

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...  
      - docker build -t $REPOSITORY_URI/$IMAGE_REPO_NAME:latest .
      - docker tag $REPOSITORY_URI/$IMAGE_REPO_NAME:latest $REPOSITORY_URI/$IMAGE_REPO_NAME:$IMAGE_TAG   
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI/$IMAGE_REPO_NAME:latest
      - docker push $REPOSITORY_URI/$IMAGE_REPO_NAME:$IMAGE_TAG
      - "helm upgrade -i hello-realse heml-chart -f ./path/to/kubernetes/values/values.yaml --set image.tag=$IMAGE_TAG"

